<div>
        <a href="https://vitejs.dev" target="_blank">
          <img src={viteLogo} className="logo" alt="Vite logo" />
        </a>
        <a href="https://react.dev" target="_blank">
          <img src={reactLogo} className="logo react" alt="React logo" />
        </a>
      </div>
      <h1>Vite + React</h1>
      <div className="card">
        <button onClick={() => setCount((count) => count + 1)}>
          count is {count}
        </button>
        <p>
          Edit <code>src/App.tsx</code> and save to test HMR
        </p>
      </div>
      <p className="read-the-docs">
        Click on the Vite and React logos to learn more
      </p>


  const settingitem = userId;
        setListofdata(settingitem);



    useEffect(()=>{
     navigate('secondpage');
    },userdata)










    --------------------------
    import React, { useEffect, useState } from 'react'
import { useNavigate } from 'react-router-dom';
import { useContext } from 'react';
import { MyContext } from './MyContext';

const SecondPage = () => {
     
  const navigate = useNavigate();
  const userdata = localStorage.getItem('user'); 


  const { text, setText } = useContext(MyContext);

  interface User {
        userId: number;
        id: string;
        title: string;
        body: string;
   }
  

  useEffect(()=>{
     if(!userdata){
       navigate('/');
       setText(true);
     }
    
    },[navigate, setText, userdata])

  const listHandler = async () => {
    try{
      const response = await fetch('https://jsonplaceholder.typicode.com/posts');
      const data = await response.json();
      // const [userId] = data;
     const information = data.map((userId)=>{
        // console.log(userId);
      
        const user: User = {
        userId: userId.userId,
        id: userId.id,
        title: userId.title,
        body: userId.body,
      }

      return user;
      
      
    })
   
    console.log(information);
    
    return(
      <div>Hekko</div>
    )
    

      
    }
    
    catch(error){
      console.log(error);
      
    }

  }

  listHandler();
  // Convert the retrieved JSON data into a model/interface in Typescript.

// console.log(rohit);






  return (
    <div>
        <h1>second page</h1>
    </div>
  )
}

export default SecondPage;








const listHandler = async () => {

      const response = await fetch('https://jsonplaceholder.typicode.com/posts');
      const data = await response.json();
      
      const information = data.map((userId)=>{
      
        const user: User = {
        userId: userId.userId,
        id: userId.id,
        title: userId.title,
        body: userId.body,

      }

      return user;
      
      
    })
   
    // console.log(information);
    // return information;
    setListData(information)

  }


    listHandler();








    // console.log(listdata);
  
  // const { listdata.body } = listdata;
  
  // console.log(body);
  
  const listdata = async() => {
    
    const handledata = await listHandler();
    
    
    
  }
  listdata();

  
  


  
  
  
  
  
  




  
  

  // const information = listdata.map((userId)=>{
      
  //       const user: User = {
  //       userId: userId.userId,
  //       id: userId.id,
  //       title: userId.title,
  //       body: userId.body,

  //     }
  
  //     return user;   
      
  //   })
  //   console.log(information);
    

  

  // console.log(info);
  
  
// console.log(listdata);
  
  
// Convert the retrieved JSON data into a model/interface in Typescript.

// console.log(rohit);




      const { body, id, title, userId } = userIda;


      console.log(userIda);

      console.log(body, id, title, userId);


       data.then((data)=>{
      const analy = data.map((info)=>{

        const { body, id, title, userId }  = info;
        const rohit = body;
        return rohit;
        
      })

      return analy
      
      

      
    
    })








    {

        information.map((info)=>{
          const { body, id, title, userId } = info;

          <div>{body}</div>
    
  })
      }




      /// high level destructuring

        
    
    data.then((data)=>{
      data.map((info)=>{

        const {title} = info;
        console.log(title);
      })
      const {userId} = data[0];
      console.log(userId);
      
    
    })




    const listHandler = async () => {

      const response = await fetch('https://jsonplaceholder.typicode.com/posts');
      const data = await response.json();
      const person = data;

      const {id} = person;
      const {title} = person;
      const {userId} = person;
      const {body} = person;

      const newPerson = {
        id,
        title,
        userId,
        body,
      }

      

      
      
      
      


      const information = data.map((userIda)=>{
      
      const {id} = userIda;
      const {title} = userIda;
      const {userId} = userIda;
      const {body} = userIda;

      const newPerson = {
        id,
        title,
        userId,
        body,
      }
      console.log(newPerson);
      
      
      
    })

  

    return information;
    
   

    // const rohit = information.map((info)=>{
    //   const { body, id, title, userId } = info;
    //   return (
    //   <div key={id}>
    //     <span>Groups: {userId}</span>
    //     <h3>{title}</h3>
    //     <p>{body}</p>
    //   </div>
    //   )
    // })
      

    // console.log(rohit);

  }

   listHandler();


   const datahandler = listHandler();
import React, { useState } from 'react'


const DataGrid = (props) => {

  const [item, setItem] = useState([]);
  
  const data = props.info;

  

  const information = data.map((userIda)=>{
      
      const {id} = userIda;
      const {title} = userIda;
      const {userId} = userIda;
      const {body} = userIda;

      const newPerson = {
        id,
        title,
        userId,
        body,
      }
      console.log(newPerson);
      



  
  return (
    <div>
   
    </div>
  )
}

export default DataGrid;
